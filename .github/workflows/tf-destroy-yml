name: 'Terraform Destroy'
on:
  workflow_dispatch:
    inputs:
      infra_env:
        description: 'Environment of infrastructure'
        required: true
        default: 'dev'

env:
  ENV: dev
  BUCKET_NAME: aws-ceq-dev-devops-state
  DYNAMO_DB : aws-ceq-dev-devops-statelock

# Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
defaults:
  run:
    shell: bash  

jobs:  
  terraform:
    name: 'destroy ceq web infra'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1


    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::654654150628:role/bain-oidc-role
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{env.REGION}}    
    
    - name: Terraform Init
      run: terraform init -no-color -reconfigure -force-copy -backend-config="bucket=$BUCKET_NAME" -backend-config="key=${{ env.TF_VAR_STATE_FILE }}" -backend-config="dynamodb_table=$DYNAMO_DB" -backend-config="encrypt=true"
      env:
        TF_VAR_STATE_FILE: "$ENV-${{ github.event.repository.name }}.tfstate"  

    - name: Terraform Destroy
      #if: github.ref == 'refs/heads/master' && github.event_name == 'push'      
      run: terraform destroy -auto-approve -var-file="$ENV/terraform.tfvars" -input=false -lock=false
